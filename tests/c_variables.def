page: test, basic_frame
    module: c

    $(if:0)
        n=10
        $dump n
    $(elif:1)
        $call type_from_names
    $(elif:1)
        $(for:f_integer, p_cell)
            $my $1 = 4.1
            $print $1 = $$1

        $local int array[]={1,2,3}
        pn_t = array
        ppn_t = &pn_t

        $allocate p_n4_temp
        *p_n4_temp=100


subcode: _autoload
    $register_name(f_integer) int
    $register_name(p_cell) int

subcode: temp_var
    DEBUG type
    $temp int p=1
    $print $(p) = $$(p)

subcode: type_from_names
    $my s, n, f, i, file
    $my ts, t_s, ts_block[10], ts_ip_block[10]
    $my tn, t_n, tpn_block[10], p_n_list
    $my buf, t_buf, test_buf
    $my count, tp_count, row_count, col_count
    $my size, p_buf_size, pbuf_size
        
/* expect test.c:
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv){
    char* s;
    int n;
    float f;
    int i;
    FILE* file;
    char* ts;
    char* t_s;
    char ts_block[10];
    char ts_ip_block[10];
    int tn;
    int t_n;
    int tpn_block[10];
    int* p_n_list;
    unsigned char* buf;
    unsigned char* t_buf;
    unsigned char* test_buf;
    int count;
    int* tp_count;
    int row_count;
    int col_count;
    int size;
    int* p_buf_size;
    int pbuf_size;
    return 0;
}

*/
