include: c/hash.def
include: c/string.def

# reference: http://hz2.org/blog/hash_table_in_c.html

page: test, basic_frame
    module: c

    $(if:1)
        $call test_str_hash_int
    $(else)
        # $call test_str_hash_str
        $call test_int_hash_int

#---------------------------------------- 
subcode: test_str_hash_int
    $my hash H: int
    
    $local string s
    $for i=0:10
        s.$clear
        s.$add "a", i
        H{s}=i
        
    H{34}=43
    H{"68"}=86
    H{hello}=12345

    #-- actually an ordered hash ----
    &call str_hash_foreach, H
        $print "%s => ${$(value)}", $(key)

    $print "  34: %d", H{34}
    $print "  68: %d", H{68}
    $print "  a7: $H{a7}"
    $print "  b7: $H{b7}"
    $print "  hello: %d", H{hello}
    
    $if H{a8}
        $print "Got a8"

#---------------------------------------- 
subcode: test_str_hash_str
    $my hash H # default as $my str_hash H: str
    
    $local string s
    $local s_buf[100]
    $for i=0:10
        s.$clear
        s.$add "a", i
        sprintf(s_buf, "str-%d", i)
        H{s}=strdup(s_buf)
        
    #-- actually an ordered hash ----
    &call str_hash_foreach, H
        $print "%s => %s", $(key), $(value)

    $print "  a7: %s", H{a7}
    
#---------------------------------------- 
subcode: test_int_hash_int
    $my int_hash H: int
    H.$resize 80000
    
    $for i=0:5
        H{i}=i
        
    $print "  1: %d", H{1}
    $print "  3: %d", H{3}

/* expect output:
a0 => 0
a1 => 1
a2 => 2
a3 => 3
a4 => 4
a5 => 5
a6 => 6
a7 => 7
a8 => 8
a9 => 9
34 => 43
68 => 86
hello => 12345
  34: 43
  68: 86
  a7: 7
  b7: 0
  hello: 12345
Got a8
*/
