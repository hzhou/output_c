include: c/darray.def
include: c/array.def
page: test, basic_frame
    $(if:1)
        $call test_array
    $(elif:1)
        $call test_basic
    $(else)
        $call test_tuple

subcode: test_basic
    $my darray P: int
    P.$resize 10
    $for 10
        P.$push $(i)+1
    $foreach P
        $print "    %d", $(t)

subcode: test_tuple
    $my darray P: int, char
    P.$resize 10
    $foreach P
        $(t)=$(i), $(i)+'A'
        $print "    %d: %c", $(i), $(t).2
    P.$resize 0
    P.$push 108, 108
    # ref: macros_c/expression.def check_exp_subscript
    $print "last item: %d", P[-1].1

    (n, c)=P.$pop()
    $print n = $n, c = $c

#---------------------------------------- 
subcode: test_array
    $global array A[4]: int
    $foreach A
        $(t)=$(i)
    $for 4
        $print "A[%d]=%d", $(i), A[$(i)]
    F($(array_arg:A))

fncode: F(array int L)
    L.$push 2
    L.$push 3
    L.$push 5
    L.$push 7
    L.$push 11
    $foreach L
        $print "$$(i): %d", $(t)
