include: c/string.def
include: c/file_glob.def

subcode: open_r_line(file)
    $call fmt_filename, $(file)
    file_in=fopen($(f), "r")
    $if file_in==NULL
        fprintf(stderr, "Can't open %s\n", $(f))
    $else
        $my s_line
        $local_allocate(1000) s_line
        $while fgets(s_line, 1000, file_in)
            $(set:l=s_line)
            BLOCK
        fclose(file_in)

#---------------------------------------- 
subcode: stat_file(file)
    $include <sys/stat.h>
    $get_type(type) $(file) 
    $(if:file~")
        $(set:f=$(file))
    $(elif:type~char)
        $(set:f=$(file))
    $(else)
        $call fmt_filename, $(file)
    $temp struct stat st
    tn_ret=stat($(f), &$(st))
    $(set:exist=tn_ret==0)
    $(set:fsize=$(st).st_size)
    $(set:ftime=$(st).st_mtime)
    BLOCK

subcode: if_exist(file)
    &call stat_file, $(file)
        $if $(exist)
            BLOCK

subcode: if_dir(file)
    &call stat_file, $(file)
        $if $(exist) && S_ISDIR(sb.st_mode)
            BLOCK

#---------------------------------------- 
subcode: fmt_filename(file)
    $local string temp_string
    temp_string.$empty
    temp_string.$fmt $(file)
    $(export:f=temp_string)

