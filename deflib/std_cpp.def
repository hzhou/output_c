include: std_c.def

macros:
    style: c++11

## frame
subcode: basic_frame
    $call @global
    $list _basic_main

#---- stl containers ---------------
subcode:: _autoload
    $register_prefix(vn) std::vector<int>
    $register_prefix(vs) std::vector<std::string>
    $register_prefix(mnn) std::map<int,int>
    $register_prefix(msn) std::map<std::string,int>

    $register_prefix(rvn) std::vector<int> &
    $register_prefix(rvs) std::vector<std::string> &
    $register_prefix(rmnn) std::map<int,int> &
    $register_prefix(rmsn) std::map<std::string,int> &

subcode: vector_push(v, @list)
    $include <vector>
    $(for:t in $(list))
        $(v).push_back($(t))

#---- stl query ----
subcode: map_has(m, key)
    $(allow_recurse:10)
    auto it=$(m).find($(key));
    $if it!=$(m).end()
        $(set:value=it->second)
        BLOCK

subcode: set_has(m, key)
    $(allow_recurse:10)
    auto it=$(m).find($(key));
    $if it!=$(m).end()
        BLOCK

#---- stl iteration ----
subcode: stl_iter(v)
    $(if:style=c++11)
        for(auto it: $(v)){
            $(set:it=it)
            BLOCK
        }
    $(else)
        $for auto it=$(v).begin();it!=$(v).end();++it
            $(set:it=*it)
            BLOCK
subcode: vec_iter(v)
    &call stl_iter, $(v)
        $(set:it=*it)
        BLOCK
subcode: map_iter(m)
    &call stl_iter, $(m)
        $(set:key=it->first)
        $(set:value=it->second)
        BLOCK
subcode: set_iter(m)
    &call stl_iter, $(m)
        $(set:item=(*it))
        BLOCK

#---- stl initilization ----
subcode: vector_append(vec, val)     
    $(vec).push_back($(val))         

subcode: set_insert(set, val)
    $(set).insert($(val))

#---- std algorithm ----
subcode: std_sort(v)
    $include <algorithm>
    $(if:style=c++11)
        std::sort(begin($(v)), end($(v)))
    $(else)
        std::sort($(v).begin(), $(v).end())

#---- C++ 11 styles -----
